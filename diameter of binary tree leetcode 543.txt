/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {

    // efficient approach
    public class pair{
        int ht;
        int dia;
    }

    public pair diameter_ht(TreeNode root){
        if(root==null){
            pair bp = new pair();
            bp.ht=-1;
            bp.dia = 0;

            return bp;
        }
        pair lp = diameter_ht(root.left);
        pair rp = diameter_ht(root.right);

        pair mp = new pair();

        mp.ht = Math.max(lp.ht,rp.ht)+1;

        mp.dia = Math.max(Math.max(lp.dia,rp.dia),lp.ht+rp.ht+2);

        return mp;
    }
    public int diameterOfBinaryTree(TreeNode root) {
        pair ans = diameter_ht(root);
        return ans.dia;
    }
}